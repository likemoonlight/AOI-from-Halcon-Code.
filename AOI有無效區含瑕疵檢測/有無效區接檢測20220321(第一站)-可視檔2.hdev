<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.2.0">
<procedure name="main">
<interface/>
<body>
<l>Path:='C:/Users/Jason/Desktop/有無效區接檢測20220321(第一站)-可視檔/02'</l>
<c>*////////////////Set Parameters////////////////</c>
<c>*////////////////有無效區</c>
<l>Threshold_para:= 30</l>
<l>closing_circle_para:=25</l>
<l>Set_Source_Image:=1</l>
<c>*///case 1:原圖、case 2:增強圖///</c>
<c>*////////////////一站檢測參數</c>
<c>//可調整參數</c>
<c>//調整檢測濺墨亮度範圍</c>
<l>White_thres1:=17</l>
<l>White_thres2:=255</l>
<c>//調整檢測濺墨亮度範圍</c>
<c></c>
<c>//調整濺墨面積</c>
<l>White_shape_min:=80</l>
<l>White_shape_max:=12000</l>
<c>//調整濺墨面積</c>
<c></c>
<c>//檢測VM區與BM區間隔的閥值</c>
<l>White_nums_thres1:=10</l>
<l>White_nums_thres2:=19</l>
<l>White_nums_thres3:=31</l>
<c>//檢測VM區與BM區間隔的閥值</c>
<c></c>
<c>//檢測VM區與BM區交界的閥值</c>
<l>White_with_Black_nums_thres1:=0</l>
<l>White_with_Black_nums_thres2:=1</l>
<l>White_with_Black_nums_thres3:=2</l>
<c>//檢測VM區與BM區交界的閥值</c>
<c></c>
<c>//演算法參數</c>
<l>White_scale1:=3</l>
<l>White_scale2:=5</l>
<l>White_sobel:=5.5</l>
<l>White_close:=1.5</l>
<l>White_open:=1.5</l>
<c>//演算法參數</c>
<c>*///////////////////////////////////////////////</c>
<c>*///////////Set logistic Parameters//////</c>
<l>White_in_up := false</l>
<l>White_in_left := false</l>
<l>Black_range:=3500</l>
<l>White_range:=3500</l>
<l>White_num := 0</l>
<l>Black_num := 0</l>
<l>Black_4000_num := 0</l>
<l>White_4000_num := 0</l>
<l>White_with_Black_4000_num := 0</l>
<c>*///////////讀取檔案pic///////////////////////////////////////////</c>
<l>* read_image (Img, Path+'06/(1).bmp')</l>
<l>* read_image (Img, Path+'/(12).jpg')</l>
<l>*  White_with_Black_4000_num := 1</l>
<l>*  White_4000_num:=1</l>
<l>*  White_num:=2</l>
<c>*/////////////////////////////////////////////////////////////////</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files (Path, ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index_pic := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Img, ImageFiles[Index_pic])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<c>*/////////////////////////////////////////////////////////////////</c>
<l>gen_empty_obj(ImagePart2)</l>
<l>White_array:=[] //清空參數(避免連續運算時的前後干擾)</l>
<l> Class1_Number_White:=0     //瑕疵數量</l>
<l>  Class1_height_White:=[]  //高</l>
<l>  Class1_width_White:=[]  //寬</l>
<l>  Class1_Ratio_White:=[] //寬高比</l>
<l>  Class1_area_White:=[] //面積</l>
<l>  Class1_centerX_White:=[]</l>
<l>  Class1_centerY_White:=[] //中心座標  </l>
<c>*/////////////////////////////////////////////////////////////////</c>
<l>if(White_num&gt;White_nums_thres1 and White_num&lt;White_nums_thres2 and White_with_Black_4000_num&gt;White_with_Black_nums_thres1)</l>
<l>        White_in_up:=true</l>
<l>elseif(White_num&gt;White_nums_thres2 and White_num&lt;White_nums_thres3 and White_with_Black_4000_num&gt;White_with_Black_nums_thres2)</l>
<l>        White_in_up:=false</l>
<l>elseif(White_num&gt;White_nums_thres3 and White_with_Black_4000_num&gt;White_with_Black_nums_thres3)</l>
<l>        White_in_up:=true</l>
<l>endif</l>
<c>*///////////計算區域與長寬/////////////////////////////////////////</c>
<l>height_width_ratio(Img, Height, Width, Ratio) </l>
<c>                 *////////512////4096////////</c>
<l>gen_rectangle1 (Pic_size, 0, 0, Height, Width)</l>
<c>*/////////////////////////////////////////////////////////////////</c>
<c>*///////////圖像增強</c>
<l>scale_image_max(Img, ImageScaleMax)</l>
<l>* threshold (ImageScaleMax, Region, 0, Threshold_para)</l>
<l>threshold (Img, Region, 0, Threshold_para)</l>
<c>*/////////////////Source Image//////////////////////////////</c>
<l>switch (Set_Source_Image)</l>
<l>  case 1:</l>
<l>    Source_Pic:=Img</l>
<l>    break</l>
<l>  case 2:</l>
<l>    Source_Pic:=ImageScaleMax</l>
<l>    break  </l>
<l>endswitch</l>
<c>*////////////////white and black///////////////////////////</c>
<l>close_fill_select_shape(Region, RegionClosing, RegionFillUp, ConnectedRegions, SelectedRegions, SelectedRegion0, closing_circle_para)</l>
<l>symm_select_shape(Pic_size, SelectedRegion0, ROI_0, ConnectedRegions1, SelectedRegion1, SelectedRegion2)</l>
<l>count_obj(SelectedRegion0, Number)</l>
<l>count_obj(SelectedRegion2, Number1)</l>
<c>*/////////////////////////////////////////////////////</c>
<c>*/////////////////Logistic Function/////////////////////</c>
<c> *///////////////////Logistic (1)//////////////////// </c>
<l>if(Number&gt;0)</l>
<l>    Black_num := Black_num+1</l>
<l>  for Index := 1 to Number  by 1  </l>
<l>    Log_Black(SelectedRegion0, ObjectSelected1, Index, Area_Black1, Row_Black1, Column_Black1, Height_Black1, Width_Black1, Ratio_Black1)</l>
<l>    if(Width_Black1&gt;Black_range)</l>
<l>        Black_4000_num := Black_4000_num+1</l>
<l>    endif</l>
<l>  endfor </l>
<l>endif</l>
<c> *///////////////////Logistic (2)//////////////////// </c>
<l>if(Number1&gt;0 and Number&lt;1)</l>
<l>    White_num := White_num+1</l>
<l>  for White_Index := 1 to Number1  by 1  </l>
<l>    Log_White (SelectedRegion2, White_ObjectSelected, White_Index, Height_White, Width_White, Ratio_White, Area_White, Row_White, Column_White)</l>
<l>    if(Width_White&gt;White_range)</l>
<l>        White_4000_num := White_4000_num+1</l>
<l>    endif</l>
<c>    */////////////////////////////////////////////////</c>
<l>    if(White_with_Black_4000_num &gt;1)</l>
<c>*/////////////////////For第一站檢測//////////////////////</c>
<l>       reduce_domain(Source_Pic,White_ObjectSelected,Mask)</l>
<l>       crop_domain(Mask, ImagePart2)</l>
<l>    dev_open_window (0, 0, 820, 100, 'white', WindowHandle)</l>
<l>    dev_display(Source_Pic)</l>
<l>    Col:=Column_White/5</l>
<l>    Row:=Row_White/5</l>
<l>    Dy:=500</l>
<l>    Text1:='有效區'</l>
<l>    Text2:='無效區'</l>
<l>    Text3:='(BM)'</l>
<l>    Text4:='(VA)'</l>
<l>    disp_message (WindowHandle, Text1+Text4, 'window', Row, Col, 'black', ['red','#ff11ff'])</l>
<l>    endif</l>
<c>    */////////////////////////////////////////////////</c>
<l>  endfor </l>
<l>endif</l>
<c> *///////////////////Logistic (3)//////////////////// </c>
<l>if(Number1&gt;0 and Number=1)</l>
<l>    White_num := White_num+1</l>
<l>    White_array[Number1-1]:=0</l>
<l>  for White_Index := 1 to Number1  by 1  </l>
<l>    Log_White (SelectedRegion2, White_ObjectSelected, White_Index, Height_White, Width_White, Ratio_White, Area_White, Row_White, Column_White)</l>
<c>    *///////////////////測白邊</c>
<l>    if(Width_White&gt;White_range)</l>
<l>        White_4000_num := White_4000_num+1</l>
<l>    endif      </l>
<l>        Log_Black(SelectedRegion0, ObjectSelected1, 1, Area_Black1, Row_Black1, Column_Black1, Height_Black1, Width_Black1, Ratio_Black1)</l>
<c>            *///////////////////測黑邊與白黑</c>
<l>            if(Width_Black1&gt;Black_range)</l>
<l>              Black_4000_num := Black_4000_num+1</l>
<l>            endif</l>
<l>            if(Width_White&gt;White_range and Width_Black1&gt;Black_range)</l>
<l>                White_with_Black_4000_num := White_with_Black_4000_num + 1</l>
<l>            endif</l>
<c>            *///////////////////</c>
<l>        if(Height_White&gt;500 and Height_Black1&gt;500)//left and right</l>
<l>            if(Column_White&lt;Column_Black1 and White_in_left)</l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>            elseif(Column_White&gt;Column_Black1 and White_in_left=false)</l>
<l>              White_array[White_Index-1]:=Number1 </l>
<l>            endif</l>
<c>      *///////////////////</c>
<l>        elseif(Width_White&gt;4000 and Width_Black1&gt;4000)//up and down</l>
<l>            if(Row_White&lt;Row_Black1 and White_in_up)</l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>            elseif(Row_White&gt;Row_Black1 and White_in_up=false)</l>
<l>              White_array[White_Index-1]:=Number1 </l>
<l>            endif</l>
<c>      *///////////////////            </c>
<l>        elseif(Row_White&gt;Row_Black1 and Column_White&lt;Column_Black1 and White_in_up=false and White_in_left)//left and down            </l>
<l>              White_array[White_Index-1]:=Number1             </l>
<l>        elseif(Row_White&gt;Row_Black1 and Column_White&gt;Column_Black1 and White_in_up=false and White_in_left=false)//right and down             </l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>        elseif(Row_White&lt;Row_Black1 and Column_White&lt;Column_Black1 and White_in_up and White_in_left)//left and up             </l>
<l>              White_array[White_Index-1]:=Number1            </l>
<l>        elseif(Row_White&lt;Row_Black1 and Column_White&gt;Column_Black1 and White_in_up and White_in_left=false)//right and up            </l>
<l>              White_array[White_Index-1]:=Number1            </l>
<l>        endif       </l>
<c>*/////////////////////////////////////////////////</c>
<l>   if(White_array[White_Index-1]&gt;0)</l>
<c>    */////////////////////////////////////////////////</c>
<l>     if(White_with_Black_4000_num&gt;0 and White_num&gt;1)</l>
<c>*/////////////////////For第一站檢測//////////////////////</c>
<l>       reduce_domain(Source_Pic,White_ObjectSelected,Mask)</l>
<l>       region_features(White_ObjectSelected, 'row1', White_ObjectSelect_row)</l>
<l>       region_features(White_ObjectSelected, 'column1', White_ObjectSelect_column)              </l>
<l>       crop_domain(Mask, ImagePart2)</l>
<l>    dev_open_window (0, 0, 820, 100, 'white', WindowHandle)</l>
<l>    dev_display(Source_Pic)</l>
<l>    Col:=Column_White/5</l>
<l>    Row:=Row_White/5</l>
<l>    Dy:=500</l>
<l>    Text1:='有效區'</l>
<l>    Text2:='無效區'</l>
<l>    Text3:='(BM)'</l>
<l>    Text4:='(VA)'</l>
<l>    disp_message (WindowHandle, Text1+Text4, 'window', Row, Col, 'black', ['red','#ff11ff'])</l>
<l>     endif </l>
<l>   endif </l>
<c>    */////////////////////////////////////////////////</c>
<l>  endfor </l>
<l>endif</l>
<c> *///////////////////Logistic (4)//////////////////// </c>
<l> if(Number1&gt;0 and Number&gt;1)</l>
<l>     White_num := White_num+1</l>
<l>    White_array[Number1-1]:=0</l>
<l>  for White_Index := 1 to Number1  by 1  </l>
<l>    Log_White (SelectedRegion2, White_ObjectSelected, White_Index, Height_White, Width_White, Ratio_White, Area_White, Row_White, Column_White)</l>
<c>    *///////////////////測白邊</c>
<l>    if(Width_White&gt;White_range)</l>
<l>        White_4000_num := White_4000_num+1</l>
<l>    endif      </l>
<l>        Log_Black(SelectedRegion0, ObjectSelected1, 1, Area_Black1, Row_Black1, Column_Black1, Height_Black1, Width_Black1, Ratio_Black1)</l>
<c>                *///////////////////</c>
<l>        Log_Black(SelectedRegion0, ObjectSelected2, 2, Area_Black2, Row_Black2, Column_Black2, Height_Black2, Width_Black2, Ratio_Black2)</l>
<c>            *///////////////////測黑邊</c>
<l>            if(Width_Black1&gt;Black_range or Width_Black2&gt;Black_range)</l>
<l>              Black_4000_num := Black_4000_num+1</l>
<l>            endif</l>
<c>            *///////////////////</c>
<l>        if(Height_White&gt;500 and Height_Black1&gt;500 and Height_Black2&gt;500)//left and right</l>
<l>            if(Column_White&lt;Column_Black1 and Column_White&lt;Column_Black2 and White_in_left)</l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>            elseif(Column_White&gt;Column_Black1 and Column_White&gt;Column_Black2 and White_in_left=false)</l>
<l>              White_array[White_Index-1]:=Number1 </l>
<l>            endif</l>
<c>      *///////////////////</c>
<l>        elseif(Width_White&gt;4000 and Width_Black1&gt;4000 and Width_Black2&gt;4000)//up and down</l>
<l>            if(Row_White&lt;Row_Black1 and Row_White&lt;Row_Black2 and White_in_up)</l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>            elseif(Row_White&gt;Row_Black1 and Row_White&gt;Row_Black2 and White_in_up=false)</l>
<l>              White_array[White_Index-1]:=Number1 </l>
<l>            endif</l>
<c>      *///////////////////            </c>
<l>        elseif(Row_White&gt;Row_Black1 and Row_White&gt;Row_Black2 and Column_White&lt;Column_Black1 and Column_White&lt;Column_Black2 and White_in_up=false and White_in_left)//left and down            </l>
<l>              White_array[White_Index-1]:=Number1             </l>
<l>        elseif(Row_White&gt;Row_Black1 and Row_White&gt;Row_Black2 and Column_White&gt;Column_Black1 and Column_White&gt;Column_Black2 and White_in_up=false and White_in_left=false)//right and down             </l>
<l>              White_array[White_Index-1]:=Number1</l>
<l>        elseif(Row_White&lt;Row_Black1 and Row_White&lt;Row_Black2 and Column_White&lt;Column_Black1 and Column_White&lt;Column_Black2 and White_in_up and White_in_left)//left and up             </l>
<l>              White_array[White_Index-1]:=Number1            </l>
<l>        elseif(Row_White&lt;Row_Black1 and Row_White&lt;Row_Black2 and Column_White&gt;Column_Black1 and Column_White&gt;Column_Black2 and White_in_up and White_in_left=false)//right and up            </l>
<l>              White_array[White_Index-1]:=Number1            </l>
<l>        endif       </l>
<c>*/////////////////////////////////////////////////</c>
<l>   if(White_array[White_Index-1]&gt;0)</l>
<c>    */////////////////////////////////////////////////</c>
<l>     if(White_with_Black_4000_num&gt;0 and White_num&gt;1)</l>
<c>*/////////////////////For第一站檢測//////////////////////</c>
<l>       reduce_domain(Source_Pic,White_ObjectSelected,Mask)</l>
<l>       region_features(White_ObjectSelected, 'row1', White_ObjectSelect_row)</l>
<l>       region_features(White_ObjectSelected, 'column1', White_ObjectSelect_column)       </l>
<l>       crop_domain(Mask, ImagePart2)</l>
<c>    */////////////////////</c>
<l>     endif</l>
<l>   endif</l>
<c>    */////////////////////////////////////////////////</c>
<l>  endfor </l>
<l>endif</l>
<c>*/////////////////////////////////////////////////////////////////////////////////</c>
<c>*/////////////////////第一站檢測start//////////////////////</c>
<l>area_center(ImagePart2, Detect_Area, Detect_Row, Detect_Column)</l>
<l>if(Detect_Area!=[])</l>
<l>       scale_image(ImagePart2, ImageScaleMax,White_scale1 , White_scale2)</l>
<l>       sobel_amp(ImageScaleMax, EdgeAmplitude, 'sum_abs', White_sobel)</l>
<c>    */////////////////////</c>
<l>       threshold (EdgeAmplitude, Regions, White_thres1, White_thres2)</l>
<l>       closing_circle(Regions, RegionClosing, White_close)</l>
<l>       fill_up(RegionClosing, RegionClosing)</l>
<l>       opening_circle(RegionClosing, RegionOpening, White_open)</l>
<l>       connection(RegionOpening, ConnectedRegions3)</l>
<l>       select_shape (ConnectedRegions3, ConnectedRegions3, 'area', 'and', White_shape_min, White_shape_max)</l>
<c>    */////////////////////</c>
<l>       height_width_ratio(ConnectedRegions3, RegionsHeight, RegionsWidth, RegionsRatio) </l>
<c>       *獲取區域數量</c>
<l>       count_obj(ConnectedRegions3, RegionsNumber)</l>
<c>       *返回最小外接矩形(輸入區域，(矩形左上角座標)，(矩形右下角座標))</c>
<l>       smallest_rectangle1(ConnectedRegions3, Row1, Column1, Row2, Column2)</l>
<c>       *產生最小外接矩形(畫出的區域，(矩形左上角座標)，(矩形右下角座標))</c>
<l>       gen_rectangle1(ConnectedRegions3, Row1, Column1, Row2, Column2)</l>
<c>       *產生區域面積與中座標(畫出的區域，面積，(中心座標))</c>
<l>       area_center(ConnectedRegions3, RegionsArea, RegionsCenterRow, RegionsCenterColumn)</l>
<l>       RegionsCenterRow:=RegionsCenterRow+White_ObjectSelect_row</l>
<l>       RegionsCenterColumn:=RegionsCenterColumn+White_ObjectSelect_column                                 </l>
<l>      dev_clear_window()</l>
<l>      dev_display(Img)</l>
<c>*/////////////////////回傳值//////////////////////</c>
<l>      if(White_Index&gt;0 and RegionsNumber&gt;0)</l>
<l>         Class1_Number_White := Class1_Number_White+RegionsNumber</l>
<l>            tuple_concat (Class1_height_White, RegionsHeight, Concat)</l>
<l>         Class1_height_White := Concat</l>
<l>            tuple_concat (Class1_width_White, RegionsWidth, Concat)</l>
<l>         Class1_width_White := Concat</l>
<l>            tuple_concat (Class1_Ratio_White, RegionsRatio, Concat)</l>
<l>         Class1_Ratio_White := Concat</l>
<l>            tuple_concat (Class1_area_White, RegionsArea, Concat)</l>
<l>         Class1_area_White := Concat</l>
<l>            tuple_concat (Class1_centerX_White, RegionsCenterRow, Concat)</l>
<l>         Class1_centerX_White := Concat</l>
<l>            tuple_concat (Class1_centerY_White, RegionsCenterColumn, Concat)</l>
<l>         Class1_centerY_White := Concat</l>
<l>      endif </l>
<l>endif</l>
<c>*/////////////////////第一站檢測結束//////////////////////</c>
<c>*/////////////////////////////////////////////////////////////////////////////////</c>
<l>endfor</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="close_fill_select_shape">
<interface>
<io>
<par name="Region" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="RegionClosing" base_type="iconic" dimension="0"/>
<par name="RegionFillUp" base_type="iconic" dimension="0"/>
<par name="ConnectedRegions" base_type="iconic" dimension="0"/>
<par name="SelectedRegions" base_type="iconic" dimension="0"/>
<par name="SelectedRegion0" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="closing_circle_para" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>closing_circle(Region, RegionClosing,closing_circle_para)</l>
<l>fill_up(RegionClosing, RegionFillUp)</l>
<l>connection (RegionFillUp, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 65000, 3e+06)</l>
<l>select_shape (SelectedRegions, SelectedRegion0, 'rectangularity', 'and', 0.18, 1)</l>
<l>return ()</l>
</body>
<docu id="close_fill_select_shape">
<parameters>
<parameter id="ConnectedRegions"/>
<parameter id="Region"/>
<parameter id="RegionClosing"/>
<parameter id="RegionFillUp"/>
<parameter id="SelectedRegion0"/>
<parameter id="SelectedRegions"/>
<parameter id="closing_circle_para"/>
</parameters>
</docu>
</procedure>
<procedure name="symm_select_shape">
<interface>
<io>
<par name="Pic_size" base_type="iconic" dimension="0"/>
<par name="SelectedRegion0" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="ROI_0" base_type="iconic" dimension="0"/>
<par name="ConnectedRegions1" base_type="iconic" dimension="0"/>
<par name="SelectedRegion1" base_type="iconic" dimension="0"/>
<par name="SelectedRegion2" base_type="iconic" dimension="0"/>
</oo>
</interface>
<body>
<l>symm_difference (Pic_size, SelectedRegion0, ROI_0)</l>
<l>connection(ROI_0, ConnectedRegions1)</l>
<l>select_shape (ConnectedRegions1, SelectedRegion1, 'area', 'and', 37000, 3e+06)</l>
<l>select_shape (SelectedRegion1, SelectedRegion2, 'rectangularity', 'and', 0.77, 1)</l>
<l>return ()</l>
</body>
<docu id="symm_select_shape">
<parameters>
<parameter id="ConnectedRegions1"/>
<parameter id="Pic_size"/>
<parameter id="ROI_0"/>
<parameter id="SelectedRegion0"/>
<parameter id="SelectedRegion1"/>
<parameter id="SelectedRegion2"/>
</parameters>
</docu>
</procedure>
<procedure name="Log_Black">
<interface>
<io>
<par name="SelectedRegion0" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="ObjectSelected1" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="Index" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="Area_Black1" base_type="ctrl" dimension="0"/>
<par name="Row_Black1" base_type="ctrl" dimension="0"/>
<par name="Column_Black1" base_type="ctrl" dimension="0"/>
<par name="Height_Black1" base_type="ctrl" dimension="0"/>
<par name="Width_Black1" base_type="ctrl" dimension="0"/>
<par name="Ratio_Black1" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>    select_obj(SelectedRegion0, ObjectSelected1, Index)</l>
<l>    area_center(ObjectSelected1, Area_Black1, Row_Black1, Column_Black1)</l>
<l>    height_width_ratio (ObjectSelected1, Height_Black1, Width_Black1, Ratio_Black1)</l>
<l>return ()</l>
</body>
<docu id="Log_Black">
<parameters>
<parameter id="Area_Black1"/>
<parameter id="Column_Black1"/>
<parameter id="Height_Black1"/>
<parameter id="Index"/>
<parameter id="ObjectSelected1"/>
<parameter id="Ratio_Black1"/>
<parameter id="Row_Black1"/>
<parameter id="SelectedRegion0"/>
<parameter id="Width_Black1"/>
</parameters>
</docu>
</procedure>
<procedure name="Log_White">
<interface>
<io>
<par name="SelectedRegion2" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="White_ObjectSelected" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="White_Index" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="Height_White" base_type="ctrl" dimension="0"/>
<par name="Width_White" base_type="ctrl" dimension="0"/>
<par name="Ratio_White" base_type="ctrl" dimension="0"/>
<par name="Area_Selected" base_type="ctrl" dimension="0"/>
<par name="Row_White" base_type="ctrl" dimension="0"/>
<par name="Column_White" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>    select_obj(SelectedRegion2, White_ObjectSelected, White_Index)</l>
<l>    height_width_ratio (White_ObjectSelected, Height_White, Width_White, Ratio_White)</l>
<l>    area_center(White_ObjectSelected, Area_Selected, Row_White, Column_White)</l>
<l>return ()</l>
</body>
<docu id="Log_White">
<parameters>
<parameter id="Area_Selected"/>
<parameter id="Column_White"/>
<parameter id="Height_White"/>
<parameter id="Ratio_White"/>
<parameter id="Row_White"/>
<parameter id="SelectedRegion2"/>
<parameter id="White_Index"/>
<parameter id="White_ObjectSelected"/>
<parameter id="Width_White"/>
</parameters>
</docu>
</procedure>
</hdevelop>
